<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.cloudlbs</groupId>
    <artifactId>com.cloudlbs</artifactId>
    <version>0-SNAPSHOT</version>
  </parent>
  <artifactId>cloudlbs-webapp</artifactId>
  <name>CloudLBS Webapp</name>
  <packaging>war</packaging>

  <properties>
    <gwt.test.mode>htmlunit</gwt.test.mode>

    <!-- Do not put WARs in Nexus -->
    <disable.artifact.deployment>true</disable.artifact.deployment>
  </properties>

  <dependencies>

    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.gwt.inject</groupId>
      <artifactId>gin</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava-gwt</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>com.springsource.javax.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <!-- Generate compiled stuff in the folder used for development mode -->
    <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>

    <plugins>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/webapp/pub</directory>
            </fileset>
            <fileset>
              <directory>src/main/webapp/main</directory>
            </fileset>
            <fileset>
              <directory>src/main/webapp/WEB-INF/classes</directory>
            </fileset>
            <fileset>
              <directory>src/main/webapp/WEB-INF/deploy</directory>
            </fileset>
            <fileset>
              <directory>src/main/webapp/WEB-INF/lib</directory>
            </fileset>
            <fileset>
              <directory>src/main/gwt-unitCache</directory>
            </fileset>
            <fileset>
              <directory>gwt-unitCache</directory>
            </fileset>
            <fileset>
              <directory>www-test</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- GWT Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <!-- JS is only needed in the package phase, this speeds up testing -->
        <executions>
          <execution>
            <id>gwt-compile</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>compile</goal>
              <goal>test</goal>
            </goals>
          </execution>
          <execution>
            <id>generateAsync</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generateAsync</goal>
              <goal>resources</goal>
              <goal>css</goal>
              <goal>i18n</goal>
            </goals>
          </execution>
        </executions>

        <!-- Plugin configuration. There are many available options, see gwt-maven-plugin
          documentation at codehaus.org -->
        <configuration>
          <!-- URL that should be automatically opened in the GWT shell (gwt:run). -->
          <runTarget>main.jsp</runTarget>
          <!-- Ask GWT to create the Story of Your Compile (SOYC) (gwt:compile) -->
          <compileReport>true</compileReport>
          <modules>
            <module>com.cloudlbs.web.pub.PublicDev</module>
            <module>com.cloudlbs.web.main.MainDev</module>
          </modules>
          <cssFiles>
            <cssFile>com/cloudlbs/web/core/gwt/css/GlobalStyles.css</cssFile>
          </cssFiles>
          <logLevel>INFO</logLevel>
          <copyWebapp>true</copyWebapp>
          <htmlunit>FF3</htmlunit>
          <i18nMessagesBundles>
            <i18nMessagesBundle>com.cloudlbs.web.i18n.msg.Messages</i18nMessagesBundle>
          </i18nMessagesBundles>
        </configuration>
      </plugin>

      <!-- Google Plugin for Eclipse (GPE) won't see the source generated above
        by generateAsync unless it is exposed as an additional source dir -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/gwt</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/webapp</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Mark the project for Google Plugin for Eclipse (GPE) -->
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>false</downloadJavadocs>
          <wtpversion>2.0</wtpversion>
          <additionalBuildcommands>
            <buildCommand>
              <name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
            </buildCommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>

      <!-- "mvn tomcat:run" does not include the GWT generated files. For running
        as a fully compiled WAR, use "mvn tomcat:run-war" -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <configuration>
          <systemProperties>
            <log4j.configuration>sample-config/tomcat-run-log4j.xml</log4j.configuration>
          </systemProperties>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>

  </build>

  <profiles>
    <profile>
      <id>production</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>gwt-maven-plugin</artifactId>
            <configuration>
              <!--
                The production profile activates compilation of the full i18n GWT app (many more permutations built)
              -->
              <modules>
                <module>com.cloudlbs.web.pub.Public</module>
                <module>com.cloudlbs.web.main.Main</module>
              </modules>
              <style>OBF</style>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
